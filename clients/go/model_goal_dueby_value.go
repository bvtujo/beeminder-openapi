/*
Beeminder

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
Contact: austinrossely@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GoalDuebyValue struct for GoalDuebyValue
type GoalDuebyValue struct {
	Delta *float32 `json:"delta,omitempty"`
	Total *float32 `json:"total,omitempty"`
	FormattedDeltaForBeedroid *string `json:"formatted_delta_for_beedroid,omitempty"`
	FormattedTotalForBeedroid *string `json:"formatted_total_for_beedroid,omitempty"`
}

// NewGoalDuebyValue instantiates a new GoalDuebyValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoalDuebyValue() *GoalDuebyValue {
	this := GoalDuebyValue{}
	return &this
}

// NewGoalDuebyValueWithDefaults instantiates a new GoalDuebyValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoalDuebyValueWithDefaults() *GoalDuebyValue {
	this := GoalDuebyValue{}
	return &this
}

// GetDelta returns the Delta field value if set, zero value otherwise.
func (o *GoalDuebyValue) GetDelta() float32 {
	if o == nil || o.Delta == nil {
		var ret float32
		return ret
	}
	return *o.Delta
}

// GetDeltaOk returns a tuple with the Delta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoalDuebyValue) GetDeltaOk() (*float32, bool) {
	if o == nil || o.Delta == nil {
		return nil, false
	}
	return o.Delta, true
}

// HasDelta returns a boolean if a field has been set.
func (o *GoalDuebyValue) HasDelta() bool {
	if o != nil && o.Delta != nil {
		return true
	}

	return false
}

// SetDelta gets a reference to the given float32 and assigns it to the Delta field.
func (o *GoalDuebyValue) SetDelta(v float32) {
	o.Delta = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GoalDuebyValue) GetTotal() float32 {
	if o == nil || o.Total == nil {
		var ret float32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoalDuebyValue) GetTotalOk() (*float32, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *GoalDuebyValue) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float32 and assigns it to the Total field.
func (o *GoalDuebyValue) SetTotal(v float32) {
	o.Total = &v
}

// GetFormattedDeltaForBeedroid returns the FormattedDeltaForBeedroid field value if set, zero value otherwise.
func (o *GoalDuebyValue) GetFormattedDeltaForBeedroid() string {
	if o == nil || o.FormattedDeltaForBeedroid == nil {
		var ret string
		return ret
	}
	return *o.FormattedDeltaForBeedroid
}

// GetFormattedDeltaForBeedroidOk returns a tuple with the FormattedDeltaForBeedroid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoalDuebyValue) GetFormattedDeltaForBeedroidOk() (*string, bool) {
	if o == nil || o.FormattedDeltaForBeedroid == nil {
		return nil, false
	}
	return o.FormattedDeltaForBeedroid, true
}

// HasFormattedDeltaForBeedroid returns a boolean if a field has been set.
func (o *GoalDuebyValue) HasFormattedDeltaForBeedroid() bool {
	if o != nil && o.FormattedDeltaForBeedroid != nil {
		return true
	}

	return false
}

// SetFormattedDeltaForBeedroid gets a reference to the given string and assigns it to the FormattedDeltaForBeedroid field.
func (o *GoalDuebyValue) SetFormattedDeltaForBeedroid(v string) {
	o.FormattedDeltaForBeedroid = &v
}

// GetFormattedTotalForBeedroid returns the FormattedTotalForBeedroid field value if set, zero value otherwise.
func (o *GoalDuebyValue) GetFormattedTotalForBeedroid() string {
	if o == nil || o.FormattedTotalForBeedroid == nil {
		var ret string
		return ret
	}
	return *o.FormattedTotalForBeedroid
}

// GetFormattedTotalForBeedroidOk returns a tuple with the FormattedTotalForBeedroid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoalDuebyValue) GetFormattedTotalForBeedroidOk() (*string, bool) {
	if o == nil || o.FormattedTotalForBeedroid == nil {
		return nil, false
	}
	return o.FormattedTotalForBeedroid, true
}

// HasFormattedTotalForBeedroid returns a boolean if a field has been set.
func (o *GoalDuebyValue) HasFormattedTotalForBeedroid() bool {
	if o != nil && o.FormattedTotalForBeedroid != nil {
		return true
	}

	return false
}

// SetFormattedTotalForBeedroid gets a reference to the given string and assigns it to the FormattedTotalForBeedroid field.
func (o *GoalDuebyValue) SetFormattedTotalForBeedroid(v string) {
	o.FormattedTotalForBeedroid = &v
}

func (o GoalDuebyValue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Delta != nil {
		toSerialize["delta"] = o.Delta
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	if o.FormattedDeltaForBeedroid != nil {
		toSerialize["formatted_delta_for_beedroid"] = o.FormattedDeltaForBeedroid
	}
	if o.FormattedTotalForBeedroid != nil {
		toSerialize["formatted_total_for_beedroid"] = o.FormattedTotalForBeedroid
	}
	return json.Marshal(toSerialize)
}

type NullableGoalDuebyValue struct {
	value *GoalDuebyValue
	isSet bool
}

func (v NullableGoalDuebyValue) Get() *GoalDuebyValue {
	return v.value
}

func (v *NullableGoalDuebyValue) Set(val *GoalDuebyValue) {
	v.value = val
	v.isSet = true
}

func (v NullableGoalDuebyValue) IsSet() bool {
	return v.isSet
}

func (v *NullableGoalDuebyValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoalDuebyValue(val *GoalDuebyValue) *NullableGoalDuebyValue {
	return &NullableGoalDuebyValue{value: val, isSet: true}
}

func (v NullableGoalDuebyValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoalDuebyValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


