/*
Beeminder

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
Contact: austinrossely@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GoalRecentDataInner struct for GoalRecentDataInner
type GoalRecentDataInner struct {
	Id *GoalRecentDataInnerId `json:"id,omitempty"`
	Fulltext *string `json:"fulltext,omitempty"`
	Canonical *string `json:"canonical,omitempty"`
	Origin *string `json:"origin,omitempty"`
	Urtext NullableString `json:"urtext,omitempty"`
	MeasuredAt *string `json:"measured_at,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	Comment *string `json:"comment,omitempty"`
	Value *float32 `json:"value,omitempty"`
	Daystamp *string `json:"daystamp,omitempty"`
}

// NewGoalRecentDataInner instantiates a new GoalRecentDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoalRecentDataInner() *GoalRecentDataInner {
	this := GoalRecentDataInner{}
	return &this
}

// NewGoalRecentDataInnerWithDefaults instantiates a new GoalRecentDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoalRecentDataInnerWithDefaults() *GoalRecentDataInner {
	this := GoalRecentDataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GoalRecentDataInner) GetId() GoalRecentDataInnerId {
	if o == nil || o.Id == nil {
		var ret GoalRecentDataInnerId
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoalRecentDataInner) GetIdOk() (*GoalRecentDataInnerId, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GoalRecentDataInner) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given GoalRecentDataInnerId and assigns it to the Id field.
func (o *GoalRecentDataInner) SetId(v GoalRecentDataInnerId) {
	o.Id = &v
}

// GetFulltext returns the Fulltext field value if set, zero value otherwise.
func (o *GoalRecentDataInner) GetFulltext() string {
	if o == nil || o.Fulltext == nil {
		var ret string
		return ret
	}
	return *o.Fulltext
}

// GetFulltextOk returns a tuple with the Fulltext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoalRecentDataInner) GetFulltextOk() (*string, bool) {
	if o == nil || o.Fulltext == nil {
		return nil, false
	}
	return o.Fulltext, true
}

// HasFulltext returns a boolean if a field has been set.
func (o *GoalRecentDataInner) HasFulltext() bool {
	if o != nil && o.Fulltext != nil {
		return true
	}

	return false
}

// SetFulltext gets a reference to the given string and assigns it to the Fulltext field.
func (o *GoalRecentDataInner) SetFulltext(v string) {
	o.Fulltext = &v
}

// GetCanonical returns the Canonical field value if set, zero value otherwise.
func (o *GoalRecentDataInner) GetCanonical() string {
	if o == nil || o.Canonical == nil {
		var ret string
		return ret
	}
	return *o.Canonical
}

// GetCanonicalOk returns a tuple with the Canonical field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoalRecentDataInner) GetCanonicalOk() (*string, bool) {
	if o == nil || o.Canonical == nil {
		return nil, false
	}
	return o.Canonical, true
}

// HasCanonical returns a boolean if a field has been set.
func (o *GoalRecentDataInner) HasCanonical() bool {
	if o != nil && o.Canonical != nil {
		return true
	}

	return false
}

// SetCanonical gets a reference to the given string and assigns it to the Canonical field.
func (o *GoalRecentDataInner) SetCanonical(v string) {
	o.Canonical = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *GoalRecentDataInner) GetOrigin() string {
	if o == nil || o.Origin == nil {
		var ret string
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoalRecentDataInner) GetOriginOk() (*string, bool) {
	if o == nil || o.Origin == nil {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *GoalRecentDataInner) HasOrigin() bool {
	if o != nil && o.Origin != nil {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given string and assigns it to the Origin field.
func (o *GoalRecentDataInner) SetOrigin(v string) {
	o.Origin = &v
}

// GetUrtext returns the Urtext field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GoalRecentDataInner) GetUrtext() string {
	if o == nil || o.Urtext.Get() == nil {
		var ret string
		return ret
	}
	return *o.Urtext.Get()
}

// GetUrtextOk returns a tuple with the Urtext field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GoalRecentDataInner) GetUrtextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Urtext.Get(), o.Urtext.IsSet()
}

// HasUrtext returns a boolean if a field has been set.
func (o *GoalRecentDataInner) HasUrtext() bool {
	if o != nil && o.Urtext.IsSet() {
		return true
	}

	return false
}

// SetUrtext gets a reference to the given NullableString and assigns it to the Urtext field.
func (o *GoalRecentDataInner) SetUrtext(v string) {
	o.Urtext.Set(&v)
}
// SetUrtextNil sets the value for Urtext to be an explicit nil
func (o *GoalRecentDataInner) SetUrtextNil() {
	o.Urtext.Set(nil)
}

// UnsetUrtext ensures that no value is present for Urtext, not even an explicit nil
func (o *GoalRecentDataInner) UnsetUrtext() {
	o.Urtext.Unset()
}

// GetMeasuredAt returns the MeasuredAt field value if set, zero value otherwise.
func (o *GoalRecentDataInner) GetMeasuredAt() string {
	if o == nil || o.MeasuredAt == nil {
		var ret string
		return ret
	}
	return *o.MeasuredAt
}

// GetMeasuredAtOk returns a tuple with the MeasuredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoalRecentDataInner) GetMeasuredAtOk() (*string, bool) {
	if o == nil || o.MeasuredAt == nil {
		return nil, false
	}
	return o.MeasuredAt, true
}

// HasMeasuredAt returns a boolean if a field has been set.
func (o *GoalRecentDataInner) HasMeasuredAt() bool {
	if o != nil && o.MeasuredAt != nil {
		return true
	}

	return false
}

// SetMeasuredAt gets a reference to the given string and assigns it to the MeasuredAt field.
func (o *GoalRecentDataInner) SetMeasuredAt(v string) {
	o.MeasuredAt = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GoalRecentDataInner) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoalRecentDataInner) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GoalRecentDataInner) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *GoalRecentDataInner) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *GoalRecentDataInner) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoalRecentDataInner) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *GoalRecentDataInner) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *GoalRecentDataInner) SetComment(v string) {
	o.Comment = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *GoalRecentDataInner) GetValue() float32 {
	if o == nil || o.Value == nil {
		var ret float32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoalRecentDataInner) GetValueOk() (*float32, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *GoalRecentDataInner) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given float32 and assigns it to the Value field.
func (o *GoalRecentDataInner) SetValue(v float32) {
	o.Value = &v
}

// GetDaystamp returns the Daystamp field value if set, zero value otherwise.
func (o *GoalRecentDataInner) GetDaystamp() string {
	if o == nil || o.Daystamp == nil {
		var ret string
		return ret
	}
	return *o.Daystamp
}

// GetDaystampOk returns a tuple with the Daystamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoalRecentDataInner) GetDaystampOk() (*string, bool) {
	if o == nil || o.Daystamp == nil {
		return nil, false
	}
	return o.Daystamp, true
}

// HasDaystamp returns a boolean if a field has been set.
func (o *GoalRecentDataInner) HasDaystamp() bool {
	if o != nil && o.Daystamp != nil {
		return true
	}

	return false
}

// SetDaystamp gets a reference to the given string and assigns it to the Daystamp field.
func (o *GoalRecentDataInner) SetDaystamp(v string) {
	o.Daystamp = &v
}

func (o GoalRecentDataInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Fulltext != nil {
		toSerialize["fulltext"] = o.Fulltext
	}
	if o.Canonical != nil {
		toSerialize["canonical"] = o.Canonical
	}
	if o.Origin != nil {
		toSerialize["origin"] = o.Origin
	}
	if o.Urtext.IsSet() {
		toSerialize["urtext"] = o.Urtext.Get()
	}
	if o.MeasuredAt != nil {
		toSerialize["measured_at"] = o.MeasuredAt
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.Daystamp != nil {
		toSerialize["daystamp"] = o.Daystamp
	}
	return json.Marshal(toSerialize)
}

type NullableGoalRecentDataInner struct {
	value *GoalRecentDataInner
	isSet bool
}

func (v NullableGoalRecentDataInner) Get() *GoalRecentDataInner {
	return v.value
}

func (v *NullableGoalRecentDataInner) Set(val *GoalRecentDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGoalRecentDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGoalRecentDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoalRecentDataInner(val *GoalRecentDataInner) *NullableGoalRecentDataInner {
	return &NullableGoalRecentDataInner{value: val, isSet: true}
}

func (v NullableGoalRecentDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoalRecentDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


